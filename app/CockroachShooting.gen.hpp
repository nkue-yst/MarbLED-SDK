/********************************************
 ** This file is generated by AppGenerator **
 ********************************************/

#pragma once

#include "AppInterface.hpp"
#include "TLL.h"

#include <chrono>
#include <cstdint>
#include <memory>

enum GameState
{
    TITLE,
    IN_GAME,
    FINISHED,
};

class Cockroach
{
public:
    Cockroach(int16_t x, int16_t y, int16_t vx, int16_t vy);

    void move(int32_t level);
    void draw();

    int16_t x, y;
    int16_t vx, vy;

    uint64_t frame = 0;
};

class CockroachShooting : public tll::AppInterface
{
public:
    CockroachShooting();
    ~CockroachShooting();

    void init() override;
    void run() override;
    void terminate() override;

    void onTouched(tll::TouchInfo ti) override;
    void onMoved(tll::TouchInfo ti) override;
    void onReleased(tll::TouchInfo ti) override;

    void drawReticle(int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3);

    void shoot();
    void playShootAnim();
    bool checkSuccess();

    std::vector<Cockroach*> cockroach;

    tll::TouchInfo points[3];

    uint16_t cx, cy;

    /* Game state variables */
    uint32_t score;
    GameState game_state;
    int32_t level;
    int32_t charge;
    std::chrono::system_clock::time_point start, now;

    /* Animation flags */
    bool playing_shoot_anim;
};

/* Required to use in loading application file */
extern "C"
{
    std::unique_ptr<tll::AppInterface> create()
    {
        return std::unique_ptr<tll::AppInterface>(new CockroachShooting);
    }
}
