/********************************************
 ** This file is generated by AppGenerator **
 ********************************************/

#include "ADIR01P_Television.gen.hpp"
#include "TLL.h"

#include <iostream>

ADIR01P_Television::ADIR01P_Television()
{
    std::cout << "Create ADIR01P_Television instance." << std::endl;

    this->is_touched_[0] = false;
    this->is_touched_[1] = false;
    this->is_touched_[2] = false;
    this->is_touched_[3] = false;
    this->is_touched_[4] = false;
}

ADIR01P_Television::~ADIR01P_Television()
{
    std::cout << "Delete ADIR01P_Television instance." << std::endl;
}

void ADIR01P_Television::init()
{

}

void ADIR01P_Television::run()
{
    tll::clear();

    // Power button
    if (!this->is_touched_[0])
        tll::drawRect(27, 11, 10, 10, tll::Color(255, 0, 0));
    else
        tll::drawRect(27, 11, 10, 10, tll::Color(128, 0, 0));

    // Volume up button
    if (!this->is_touched_[1])
        tll::drawRect(6, 4, 12, 12, tll::Color(0, 255, 255));
    else
        tll::drawRect(6, 4, 12, 12, tll::Color(0, 128, 128));

    tll::drawRect( 8, 9, 8, 2, tll::Color(0, 0, 0));
    tll::drawRect(11, 6, 2, 8, tll::Color(0, 0, 0));

    // Volume down button
    if (!this->is_touched_[2])
        tll::drawRect(6, 17, 12, 12, tll::Color(0, 255, 255));
    else
        tll::drawRect(6, 17, 12, 12, tll::Color(0, 128, 128));

    tll::drawRect(8, 22, 8, 2, tll::Color(0, 0, 0));

    // Channel up button
    if (!this->is_touched_[3])
        tll::drawRect(45, 4, 12, 12, tll::Color(50, 255, 50));
    else
        tll::drawRect(45, 4, 12, 12, tll::Color(0, 128, 0));

    tll::drawLine(47, 10, 50,  7, tll::Color(0, 0, 0));
    tll::drawLine(47, 11, 50,  8, tll::Color(0, 0, 0));
    tll::drawLine(51,  7, 54, 10, tll::Color(0, 0, 0));
    tll::drawLine(51,  8, 54, 11, tll::Color(0, 0, 0));

    // Channel down button
    if (!this->is_touched_[4])
        tll::drawRect(45, 17, 12, 12, tll::Color(50, 255, 50));
    else
        tll::drawRect(45, 17, 12, 12, tll::Color(0, 128, 0));

    tll::drawLine(47, 22, 50, 25, tll::Color(0, 0, 0));
    tll::drawLine(47, 23, 50, 26, tll::Color(0, 0, 0));
    tll::drawLine(51, 25, 54, 22, tll::Color(0, 0, 0));
    tll::drawLine(51, 26, 54, 23, tll::Color(0, 0, 0));
}

void ADIR01P_Television::terminate()
{

}

void ADIR01P_Television::onTouched(tll::TouchInfo ti)
{
    if (ti.id != 0)
        return;

    this->is_touched_[0] = (27 <= ti.x && ti.x <= 36 && 11 <= ti.y && ti.y <= 20);
    this->is_touched_[1] = ( 6 <= ti.x && ti.x <= 17 &&  4 <= ti.y && ti.y <= 15);
    this->is_touched_[2] = ( 6 <= ti.x && ti.x <= 17 && 17 <= ti.y && ti.y <= 28);
    this->is_touched_[3] = (45 <= ti.x && ti.x <= 56 &&  4 <= ti.y && ti.y <= 15);
    this->is_touched_[4] = (45 <= ti.x && ti.x <= 56 && 17 <= ti.y && ti.y <= 28);
}

void ADIR01P_Television::onMoved(tll::TouchInfo ti)
{
    if (ti.id != 0)
        return;

    this->is_touched_[0] = (27 <= ti.x && ti.x <= 36 && 11 <= ti.y && ti.y <= 20);
    this->is_touched_[1] = ( 6 <= ti.x && ti.x <= 17 &&  4 <= ti.y && ti.y <= 15);
    this->is_touched_[2] = ( 6 <= ti.x && ti.x <= 17 && 17 <= ti.y && ti.y <= 28);
    this->is_touched_[3] = (45 <= ti.x && ti.x <= 56 &&  4 <= ti.y && ti.y <= 15);
    this->is_touched_[4] = (45 <= ti.x && ti.x <= 56 && 17 <= ti.y && ti.y <= 28);
}

void ADIR01P_Television::onReleased(tll::TouchInfo ti)
{
    if (ti.id != 0)
        return;

    if (this->is_touched_[0])
    {
        std::system("bto_advanced_USBIR_cmd -d `cat command_tv_power.txt`");
        this->is_touched_[0] = false;
    }
    
    if (this->is_touched_[1])
    {
        std::system("bto_advanced_USBIR_cmd -d `cat command_tv_volume_up.txt`");
        this->is_touched_[1] = false;
    }
    
    if (this->is_touched_[2])
    {
        std::system("bto_advanced_USBIR_cmd -d `cat command_tv_volume_down.txt`");
        this->is_touched_[2] = false;
    }
    
    if (this->is_touched_[3])
    {
        std::system("bto_advanced_USBIR_cmd -d `cat command_tv_channel_up.txt`");
        this->is_touched_[3] = false;
    }
    
    if (this->is_touched_[4])
    {
        std::system("bto_advanced_USBIR_cmd -d `cat command_tv_channel_down.txt`");
        this->is_touched_[4] = false;
    }
}
