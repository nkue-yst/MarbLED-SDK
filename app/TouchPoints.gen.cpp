/********************************************
 ** This file is generated by AppGenerator **
 ********************************************/

#include "TouchPoints.gen.hpp"
#include "TLL.h"

#include <iostream>

TouchPoints::TouchPoints()
{
    std::cout << "Create TouchPoints instance." << std::endl;

    for (int i = 0; i < 5; i++)
    {
        this->points[i].x = -10;
        this->points[i].y = -10;
    }
}

TouchPoints::~TouchPoints()
{
    std::cout << "Delete TouchPoints instance." << std::endl;
}

void TouchPoints::init()
{

}

void TouchPoints::run()
{
    tll::clear();

    if (this->points[0].x != -10)
    {
    	tll::drawLine(this->points[0].x - 5, this->points[0].y, this->points[0].x + 5, this->points[0].y, tll::Color(255, 255, 0));
    	tll::drawLine(this->points[0].x, this->points[0].y - 5, this->points[0].x, this->points[0].y + 5, tll::Color(255, 255, 0));
    }

     if (this->points[1].x != -10)
     {  
    	tll::drawLine(this->points[1].x - 5, this->points[1].y, this->points[1].x + 5, this->points[1].y, tll::Color(255, 0, 255));
    	tll::drawLine(this->points[1].x, this->points[1].y - 5, this->points[1].x, this->points[1].y + 5, tll::Color(255, 0, 255));
     }

    if (this->points[2].x != -10)
    {
    	tll::drawLine(this->points[2].x - 5, this->points[2].y, this->points[2].x + 5, this->points[2].y, tll::Color(0, 255, 255));
    	tll::drawLine(this->points[2].x, this->points[2].y - 5, this->points[2].x, this->points[2].y + 5, tll::Color(0, 255, 255));
    }

    if (this->points[3].x != -10)
    {
    	tll::drawLine(this->points[3].x - 5, this->points[3].y, this->points[3].x + 5, this->points[3].y, tll::Color(255, 0, 0));
    	tll::drawLine(this->points[3].x, this->points[3].y - 5, this->points[3].x, this->points[3].y + 5, tll::Color(255, 0, 0));
    }

    if (this->points[4].x != -10)
    {
    	tll::drawLine(this->points[4].x - 5, this->points[4].y, this->points[4].x + 5, this->points[4].y, tll::Color(0, 255, 0));
    	tll::drawLine(this->points[4].x, this->points[4].y - 5, this->points[4].x, this->points[4].y + 5, tll::Color(0, 255, 0));
    }
}

void TouchPoints::terminate()
{

}

void TouchPoints::onTouched(tll::TouchInfo ti)
{
    if (ti.id >= 5)
        return;

    this->points[ti.id].x = ti.x;
    this->points[ti.id].y = ti.y;

    if (this->points[ti.id].x < 5)
    {
        this->points[ti.id].x = 0;
    }

    if (this->points[ti.id].y < 5)
    {
	this->points[ti.id].y = 0;
    }

    if (this->points[ti.id].x > 63 - 5)
    {
	this->points[ti.id].x = 63 - 5;
    }

    if (this->points[ti.id].y > 31 - 5)
    {
	this->points[ti.id].y = 31 - 5;
    }
}

void TouchPoints::onMoved(tll::TouchInfo ti)
{
    if (ti.id >= 5)
        return;

    this->points[ti.id].x = ti.x;
    this->points[ti.id].y = ti.y;

    if (this->points[ti.id].x < 5)
    {
	this->points[ti.id].x = 5;
    }

    if (this->points[ti.id].y < 5)
    {
	this->points[ti.id].y = 5;
    }

    if (this->points[ti.id].x > 63 - 5)
    {
	this->points[ti.id].x = 63 - 5;
    }

    if (this->points[ti.id].y > 31 - 5)
    {
	this->points[ti.id].y = 31 - 5;
    }
} 

void TouchPoints::onReleased(tll::TouchInfo ti)
{
    if (ti.id >= 5)
        return;

    this->points[ti.id].x = -10;
    this->points[ti.id].y = -10;
}
